/**
 * Generated by `createservice address.LinkAddressAndSourceService --type mutations`
 */

const { faker } = require('@faker-js/faker')

const { makeLoggedInAdminClient } = require('@open-condo/keystone/test.utils')

const { AddressSource, linkAddressAndSourceByTestClient, createTestAddress } = require('@address-service/domains/address/utils/testSchema')

describe('LinkAddressAndSourceService', () => {
    test('Should link address and source correctly', async () => {
        const tin = faker.random.numeric(12)
        const source = `${faker.address.city()}${faker.random.alphaNumeric(8)}, ${faker.address.street()}, ${faker.random.alphaNumeric(8)}`

        const admin = await makeLoggedInAdminClient()
        const [{ id: address }] = await createTestAddress(admin)
        const payload = { source, tin, address }

        const [result] = await linkAddressAndSourceByTestClient(admin, payload)

        expect(result).toMatchObject({
            addressSource: expect.any(String),
            addressSourceCompounded: expect.any(String),
        })

        const [addressSource, addressSourceCompounded] = await Promise.all([
            AddressSource.getOne(admin, { id: result.addressSource }),
            AddressSource.getOne(admin, { id: result.addressSourceCompounded }),
        ])

        expect(addressSourceCompounded.address).toEqual(addressSource.address)
    })
})
