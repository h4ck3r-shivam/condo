// @ts-nocheck
/**
 * Generated by `createschema user.AccessToken 'token:Uuid'`
 */

const { throwAuthenticationError } = require('@open-condo/keystone/apolloErrorFormatter')

const { SERVICE } = require('@condo/domains/user/constants/common')

async function canReadAccessTokens ({ authentication: { item: user } }) {
    if (!user) return throwAuthenticationError()
    if (user.deletedAt) return false

    if (user.isAdmin || user.isSupport) return true

    return {
        createdBy:  {
            id: user.id,
        },
    }
}

async function canManageAccessTokens ({ authentication: { item: user }, originalInput, operation, itemId }) {
    if (!user) return throwAuthenticationError()
    if (user.deletedAt) return false

    if (user.isAdmin || user.isSupport) return true
    
    if (user.type === SERVICE) {
        return false
    }

    return operation === 'create'
}

/*
  Rules are logical functions that used for list access, and may return a boolean (meaning
  all or no items are available) or a set of filters that limit the available items.
*/
module.exports = {
    canReadAccessTokens,
    canManageAccessTokens,
}
