// auto generated by kmigrator
// KMIGRATOR:0206_ticket_search_ticket_searchfingerprint_and_more:IyBHZW5lcmF0ZWQgYnkgRGphbmdvIDQuMC41IG9uIDIwMjItMTItMjkgMTI6NDQKCmltcG9ydCBkamFuZ28uY29udHJpYi5wb3N0Z3Jlcy5pbmRleGVzCmZyb20gZGphbmdvLmRiIGltcG9ydCBtaWdyYXRpb25zLCBtb2RlbHMKCgpjbGFzcyBNaWdyYXRpb24obWlncmF0aW9ucy5NaWdyYXRpb24pOgoKICAgIGRlcGVuZGVuY2llcyA9IFsKICAgICAgICAoJ19kamFuZ29fc2NoZW1hJywgJzAyMDRfYmFua2ludGVncmF0aW9uX2JhbmtpbnRlZ3JhdGlvbmhpc3RvcnlyZWNvcmQnKSwKICAgIF0KCiAgICBvcGVyYXRpb25zID0gWwogICAgICAgIG1pZ3JhdGlvbnMuQWRkRmllbGQoCiAgICAgICAgICAgIG1vZGVsX25hbWU9J3RpY2tldCcsCiAgICAgICAgICAgIG5hbWU9J3NlYXJjaCcsCiAgICAgICAgICAgIGZpZWxkPW1vZGVscy5UZXh0RmllbGQoZGVmYXVsdD0nJyksCiAgICAgICAgKSwKICAgICAgICBtaWdyYXRpb25zLkFkZEZpZWxkKAogICAgICAgICAgICBtb2RlbF9uYW1lPSd0aWNrZXQnLAogICAgICAgICAgICBuYW1lPSdzZWFyY2hGaW5nZXJwcmludCcsCiAgICAgICAgICAgIGZpZWxkPW1vZGVscy5UZXh0RmllbGQoZGVmYXVsdD0naW5pdGlhbC12YWx1ZScpLAogICAgICAgICksCiAgICAgICAgbWlncmF0aW9ucy5BZGRJbmRleCgKICAgICAgICAgICAgbW9kZWxfbmFtZT0ndGlja2V0JywKICAgICAgICAgICAgaW5kZXg9ZGphbmdvLmNvbnRyaWIucG9zdGdyZXMuaW5kZXhlcy5HaW5JbmRleChmaWVsZHM9WydzZWFyY2gnXSwgbmFtZT0nVGlja2V0X3NlYXJjaEZpZWxkX2lkeCcsIG9wY2xhc3Nlcz1bJ2dpbl90cmdtX29wcyddKSwKICAgICAgICApLAogICAgXQo=

exports.up = async (knex) => {
    await knex.raw(`
BEGIN;

--
-- [CUSTOM] Set Statement Timeout to some large amount - 25 min (25 * 60 => 1500 sec)
--
SET statement_timeout = '1500s';

--
-- [CUSTOM] Add extension pg_trgm
--
CREATE EXTENSION IF NOT EXISTS pg_trgm;

--
-- Add field search to ticket
--
ALTER TABLE "Ticket" ADD COLUMN "search" text DEFAULT '' NOT NULL;
ALTER TABLE "Ticket" ALTER COLUMN "search" DROP DEFAULT;
--
-- Add field searchFingerprint to ticket
--
ALTER TABLE "Ticket" ADD COLUMN "searchFingerprint" text DEFAULT 'initial-value' NOT NULL;
ALTER TABLE "Ticket" ALTER COLUMN "searchFingerprint" DROP DEFAULT;
--
-- Create index Ticket_searchField_idx on field(s) search of model ticket
--
CREATE INDEX "Ticket_searchField_idx" ON "Ticket" USING gin ("search" gin_trgm_ops);

--
-- [CUSTOM] Add search value
--
CREATE OR REPLACE FUNCTION getSearchValue(ticketId uuid)
    RETURNS text
    LANGUAGE plpgsql SECURITY DEFINER
AS $$
    DECLARE
        result text;
    BEGIN
        SELECT
            concat_ws(' ', t."number",  t."clientName", t."propertyAddress", t."details", to_char(t."createdAt", 'DD-MM-YYYY'), t_executor."name", t_assignee."name", t_classifier_category."name")
                INTO result
        FROM "Ticket" AS t
            LEFT JOIN "User" AS t_executor ON t_executor."id" = t."executor"
            LEFT JOIN "User" AS t_assignee ON t_assignee."id" = t."assignee"
            LEFT JOIN "TicketClassifier" AS t_classifier ON t_classifier."id" = t."classifier"
            LEFT JOIN "TicketCategoryClassifier" AS t_classifier_category ON t_classifier_category."id" = t_classifier."category"
        WHERE t."id" = ticketId;

        RETURN result;
    END;
$$;

UPDATE "Ticket" AS t
SET "search" = getSearchValue(t."id");

DROP FUNCTION getSearchValue(uuid);

--
-- [CUSTOM] Revert Statement Timeout to default amount - 10 secs
--
SET statement_timeout = '10s';

COMMIT;

    `)
}

exports.down = async (knex) => {
    await knex.raw(`
    BEGIN;
--
-- Create index Ticket_searchField_idx on field(s) search of model ticket
--
DROP INDEX IF EXISTS "Ticket_searchField_idx";
--
-- Add field searchFingerprint to ticket
--
ALTER TABLE "Ticket" DROP COLUMN "searchFingerprint" CASCADE;
--
-- Add field search to ticket
--
ALTER TABLE "Ticket" DROP COLUMN "search" CASCADE;
COMMIT;

    `)
}
