project: condo
configVersion: 2
---

image: 
  - condo
  - callcenter 
  - eps 
  - rb 
  - insurance 
  - registryma 
  - miniapp 
  - property_importer 
  - addressservice
  - telephony
  - devportal
  - passapp
  - documents
  - devportalapi
dockerfile: Dockerfile
fromCacheVersion: "1"
git:
- add: /
  to: /app
  stageDependencies:
    install:
    - "yarn.lock"
    - "package.json"
    - "**/yarn.lock"
    - "**/package.json"
    setup:
    - "apps/**"
    - "packages/**"
    - "bin/**/*"
  excludePaths:
  - .github
  - .helm
  - werf.yaml
  - werf-giterminism.yaml
  owner: app
  group: app


docker:
  ENV:
    LANG: C.UTF-8
---
image: postgresreview
from: postgres:13.2
---
image: redisreview
from: redis:6.2
---
image: preparepostgresreview
from: postgres:13.2
shell:
  install:
  - "apt update -qq"
  - "apt install -qq -y wget"
  - "wget https://obs-community-intl.obs.ap-southeast-1.myhuaweicloud.com/obsutil/current/obsutil_linux_amd64.tar.gz"
  - "mkdir obsutil_linux_amd64 && tar -xf obsutil_linux_amd64.tar.gz -C obsutil_linux_amd64 --strip-components 1"
  - "cd obsutil_linux_amd64"
  - "chmod 755 obsutil"

---
image: python-base
from: python:3.9-slim
shell:
  beforeInstall:
  - "export DEBIAN_FRONTEND=noninteractive"
  - "groupadd -r app --gid=999"
  - "useradd --system --create-home --home /app --gid 999 --uid=999 --shell /bin/bash app"
  - "apt update -qq"
  - "apt install -qq -y --no-install-recommends
      python3-pip
      python3-dev"

docker:
  ENV:
    LANG: C.UTF-8
---
image: classifier
fromImage: python-base
fromCacheVersion: "1"
git:
  - add: /
    to: /app
    excludePaths:
      - .github
      - .helm
      - werf.yaml
      - werf-giterminism.yaml
    owner: app
    group: app

shell:
  install:
  - "cd /app/apps/classifiers-api"
  - "pip install -r requirements.txt"
